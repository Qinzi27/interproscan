<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

    <!--Imports-->
    <import resource="classpath:/spring/persistence/datasource-context.xml"/>
    <import resource="classpath:/spring/jobs/outputWriter/EntryHierarchy-context.xml"/>
    <import resource="classpath:/spring/jobs/outputWriter/xml/xmlWriter-context.xml"/>
    <import resource="classpath:/spring/jobs/outputWriter/html/htmlWriter-context.xml"/>
    <import resource="classpath:/spring/jobs/outputWriter/svg/svgWriter-context.xml"/>

    <!-- ######################## JOB: PrepareForOutput ############################  -->
    <bean id="jobPrepareForOutput" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description" value="Prepare proteins for output for proteins when analysis finished"/>
        <property name="analysis" value="false"/>
    </bean>

    <!-- STEP 1 -->
    <bean id="stepPrepareForOutput" class="uk.ac.ebi.interpro.scan.management.model.implementations.PrepareForOutputStep">
        <property name="job" ref="jobPrepareForOutput"/>
        <!-- This step is made dependent on the steps created by the protein load listener -->
        <property name="stepDescription" value="Prepare proteins for output of the completed analysis"/>
        <property name="createStepInstancesForNewProteins" value="false"/>
        <property name="retries" value="0"/>
        <property name="proteinDAO" ref="proteinDAO"/>
        <property name="matchDAO" ref="matchDAO"/>
        <property name="entryKVDAO" ref="entryKVDAO"/>
        <property name="nucleotideSequenceDAO" ref="nucleotideSequenceDAO"/>
        <property name="kvStoreDelayMilliseconds" value="${kvstore.delay.milliseconds}"/>

    </bean>



    <!-- ######################## JOB: writeOut ############################  -->
    <bean id="jobWriteOutput" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description" value="Write output for proteins when analysis finished"/>
        <property name="analysis" value="false"/>
    </bean>

    <!-- STEP 1 -->
    <bean id="stepWriteOutput" class="uk.ac.ebi.interpro.scan.management.model.implementations.WriteOutputStep">
        <property name="job" ref="jobWriteOutput"/>
        <!-- This step is made dependent on the steps created by the protein load listener -->
        <property name="stepDescription" value="Write output for completed analysis"/>
        <property name="createStepInstancesForNewProteins" value="false"/>
        <property name="retries" value="0"/>
        <property name="proteinDAO" ref="proteinDAO"/>
        <property name="nucleotideSequenceDAO" ref="nucleotideSequenceDAO"/>
        <property name="matchDAO" ref="matchDAO"/>
        <property name="deleteWorkingDirectoryOnCompletion" value="${delete.temporary.directory.on.completion}"/>
        <property name="interProScanVersion" value="${i5.version}"/>
        <property name="xmlWriter" ref="xmlWriter"/>
        <property name="htmlResultWriter" ref="htmlWriter"/>
        <property name="svgResultWriter" ref="svgWriter"/>
        <property name="xrefDao" ref="xrefDAO"/>
        <!--If set to TRUE, SVG graphical output files will be archived into one tar ball-->
        <property name="archiveSVGOutput" value="${archiveSVGOutput}"/>
        <!--If set to TRUE, the archive will be compressed as well-->
        <property name="compressHtmlAndSVGOutput" value="true"/>
        <property name="excludeSites" value="${exclude.sites.from.output}"/>
        <property name="disableHtmlOutput" value="${disable.html.output}"/>
        <property name="entryHierarchy" ref="entryHierarchy"/>
    </bean>

</beans>
